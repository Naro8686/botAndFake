<?php

namespace App\Telegram\Commands\Admin;

use App\Api\SendGridApi;
use App\Models\Category;
use App\Models\Sendgrid;
use Telegram\Bot\Actions;
use Throwable;


class GetTokenSendGridCommand extends BaseAdminCommand
{
    protected $name = 'getToken';
    protected $description = 'Get current SendGrid token';

    public function handle()
    {
        $this->replyWithChatAction(['action' => Actions::TYPING]);
        try {
            $text = [];
            $sendgrid = Sendgrid::first();
            $text[] = "-------------------";
            $text[] = "‚úâÔ∏è <i>SendGrid</i>";
            $text[] = "-------------------";
            $text[] = "<b>ID</b>: <code>{$sendgrid->id}</code>";
            $text[] = "<b>Domain</b>: <code>{$sendgrid->domain}</code>";
            $text[] = "<b>Token</b>: <code>{$sendgrid->token}</code>";
            $category = Category::first();
            $mail = setting("{$category->name}_email");
            list(, $domain) = array_pad(explode('@', $mail), 2, null);
            $text[] = "";
            $text[] = "-------------------";
            $text[] = "üì¨ <i>–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –¥–æ–º–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è</i>";
            $text[] = "-------------------";
            $text[] = "<b>Domain </b>: <code>$domain</code>";
            $sendGridApi = new SendGridApi($sendgrid->token);
            $response = $sendGridApi->userCredits();
            $data = $response->getData();
            $text[] = "";
            $text[] = "-------------------";
            $text[] = "üåê <i>API</i>";
            $text[] = "-------------------";
            if ($response->getStatusCode() === 403) {
                $text[] = "‚ùóÔ∏è <b>$data->msg</b>";
            } elseif (!$data->error && $data->count < 1) {
                $text[] = "‚ùóÔ∏è <b>–õ–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω</b>";
            } elseif ($data->error) {
                $text[] = "‚ùóÔ∏è <b>$data->msg</b>";
            } else {
                $text[] = "üí∞ <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–∏—Å—å–º</b>: <code>$data->count</code>";
            }
            $this->replyWithMessage([
                "text" => makeText($text),
                "parse_mode" => "html",
            ]);
        } catch (Throwable $e) {
            $this->replyWithMessage([
                "text" => Sendgrid::count()
                    ? "‚ùóÔ∏è <b>–ù–µ —Å–º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ</b>"
                    : [
                        "‚ùóÔ∏è <b>–ü—É—Å—Ç–æ! –¢–æ–∫–µ–Ω–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç.</b>",
                        "‚ùóÔ∏è <b>–î–æ–±–∞–≤–∏—Ç—å ?</b> <code>/addToken</code>"
                    ],
                "parse_mode" => "html",
            ]);
        }
    }
}
