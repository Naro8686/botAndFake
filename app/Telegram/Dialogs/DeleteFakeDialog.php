<?php

namespace App\Telegram\Dialogs;

use Log;
use App\Models\Fake;
use Telegram\Bot\Keyboard\Keyboard;
use Telegram\Bot\Exceptions\TelegramSDKException;

class DeleteFakeDialog extends Dialog
{
    protected $steps = [
        'index',
        ['name' => 'answer', 'is_dich' => true]
    ];

    public function index()
    {
        try {
            $track_id = $this->getData('track_id');
            if (is_null($track_id)) {
                $btns = $this->getConfig('btns');
                $text = "‚ùóÔ∏è <b>–¢–∞–∫–æ–π –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!!!</b>";
                $keyboard = Keyboard::make([
                    "keyboard" => [
                        [
                            ["text" => $btns->get('start') ?? ''],
                        ]
                    ],
                    "resize_keyboard" => true,
                    "one_time_keyboard" => false,
                ]);
                $this->end();
            } else {
                $text = "<b>–í—ã —É–≤–µ—Ä–µ–Ω—ã ‚ùî</b>";
                $keyboard = Keyboard::make([
                    "keyboard" => [
                        [
                            ["text" => "–¥–∞"],
                            ["text" => "–Ω–µ—Ç"],
                        ]
                    ],
                    "resize_keyboard" => true,
                    "one_time_keyboard" => false,
                ]);
            }
            $this->telegram->sendMessage([
                "chat_id" => $this->getChat()->getId(),
                "text" => $text,
                "parse_mode" => "html",
                "reply_markup" => $keyboard
            ]);
        } catch (TelegramSDKException $e) {
            Log::error($e->getMessage());
        }
    }

    public function answer()
    {
        try {
            $track_id = $this->getData('track_id');
            $btns = $this->getConfig('btns');
            if ($this->yes) {
                $fake = Fake::whereTrackId($track_id)->first();
                $img = $fake->img;
                if ($fake->delete()) {
                    if (file_exists($img)) unlink($img);
                    $text = "‚ôªÔ∏è <i>–í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º</i> <b>$track_id</b>";
                    if ($alertId = $this->getConfig('groups.alert.id'))
                        $this->telegram->sendMessage([
                            "chat_id" => $alertId,
                            "text" => "üóë <b>{$this->getUser()->accountLink()}</b> —É–¥–∞–ª–∏–ª —Ç—Ä–µ–∫ –Ω–æ–º–µ—Ä <b>$track_id</b>",
                            "parse_mode" => "html",
                        ]);

                } else $text = "ü§∑üèª‚ÄçÔ∏è <i>–ß—Ç–æ –¢–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫</i>";
            } else {
                $text = "‚ùå <i>–û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è</i>";
            }
            $keyboard = Keyboard::make([
                "keyboard" => [
                    [["text" => $btns->get('start') ?? '']],
                ],
                "resize_keyboard" => true,
                "one_time_keyboard" => false,
            ]);
            $this->telegram->sendMessage([
                "chat_id" => $this->getChat()->getId(),
                "text" => $text,
                "parse_mode" => "html",
                "reply_markup" => $keyboard
            ]);

        } catch (TelegramSDKException $e) {
            Log::error($e->getMessage());
        }
    }

}